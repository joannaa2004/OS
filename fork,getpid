#include <stdio.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>
#include <stdlib.h>

int main()
{
    pid_t pid;
    int status = 0;
    pid = fork();

    if (pid == 0)  // Child process
    {
        printf("Child\n");
        printf("PROCESS ID: %d\n", getpid());
        printf("Child exiting\n");
        exit(5);  // Set a specific exit status
    }
    else if (pid > 0)  // Parent process
    {
        wait(&status);  // Capture exit status of child
        printf("Parent\n");
        printf("PROCESS ID: %d\n", getpid());
        printf("Parent back\n");
    }
    else  // Fork failure
    {
        printf("Fork failed!\n");
        return 1;
    }

    return 0;
}
